-- NotificationLib ModuleScript
local NotificationLib = {}
NotificationLib.__index = NotificationLib

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- Helper color lookup for named colors
local ColorMap = {
    Red = Color3.fromRGB(255, 85, 85),
    Green = Color3.fromRGB(85, 255, 85),
    Blue = Color3.fromRGB(85, 170, 255),
    Yellow = Color3.fromRGB(255, 255, 85),
    Orange = Color3.fromRGB(255, 170, 0),
    Purple = Color3.fromRGB(170, 85, 255),
    White = Color3.fromRGB(255, 255, 255),
    Black = Color3.fromRGB(0, 0, 0),
    Default = Color3.fromRGB(50, 50, 50),
}

function NotificationLib.new()
    local self = setmetatable({}, NotificationLib)
    
    -- Create ScreenGui
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = "CustomNotificationGui"
    self.ScreenGui.ResetOnSpawn = false
    self.ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    
    -- Container frame to hold notifications
    self.Container = Instance.new("Frame")
    self.Container.Name = "NotificationContainer"
    self.Container.BackgroundTransparency = 1
    self.Container.Position = UDim2.new(0, 10, 0, 10) -- Top-left corner with offset
    self.Container.Size = UDim2.new(0, 300, 0, 0)
    self.Container.AnchorPoint = Vector2.new(0, 0)
    self.Container.Parent = self.ScreenGui
    self.Container.AutomaticSize = Enum.AutomaticSize.Y
    
    -- UIListLayout for stacking notifications vertically
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Padding = UDim.new(0, 5)
    uiListLayout.Parent = self.Container
    
    self.UIListLayout = uiListLayout
    
    -- Default notification color
    self.NotifColor = ColorMap.Default
    
    return self
end

-- Set notification background color directly with a Color3
function NotificationLib:SetColor(color3)
    self.NotifColor = color3 or ColorMap.Default
end

-- Create a new notification with options table
-- options: { Color = "Red", Text = "Your text here" }
function NotificationLib:new(options)
    options = options or {}
    local colorName = options.Color or "Default"
    local text = options.Text or ""

    local color = ColorMap[colorName] or ColorMap.Default
    
    local notifFrame = Instance.new("Frame")
    notifFrame.BackgroundColor3 = color
    notifFrame.BackgroundTransparency = 1 -- start transparent for tween
    notifFrame.BorderSizePixel = 0
    notifFrame.AnchorPoint = Vector2.new(0, 0)
    notifFrame.Size = UDim2.new(0, 300, 0, 24) -- thinner height
    notifFrame.Parent = self.Container
    notifFrame.ClipsDescendants = true
    
    -- Left thin white bar
    local leftBar = Instance.new("Frame")
    leftBar.Size = UDim2.new(0, 4, 1, 0)
    leftBar.Position = UDim2.new(0, 0, 0, 0)
    leftBar.BackgroundColor3 = Color3.new(1, 1, 1) -- white bar
    leftBar.BorderSizePixel = 0
    leftBar.Parent = notifFrame
    
    -- Text label
    local textLabel = Instance.new("TextLabel")
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, -12, 1, 0)
    textLabel.Position = UDim2.new(0, 6, 0, 0)
    textLabel.Font = Enum.Font.SourceSansSemibold
    textLabel.TextSize = 14 -- smaller font size
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Center
    textLabel.TextWrapped = false
    textLabel.Text = text
    textLabel.TextTransparency = 1
    textLabel.Parent = notifFrame
    
    -- Tween fade in
    local fadeIn = TweenService:Create(notifFrame, TweenInfo.new(0.3), {BackgroundTransparency = 0.4})
    local textFadeIn = TweenService:Create(textLabel, TweenInfo.new(0.3), {TextTransparency = 0})
    fadeIn:Play()
    textFadeIn:Play()
    
    -- Auto fade out after 2 seconds
    delay(2, function()
        local fadeOut = TweenService:Create(notifFrame, TweenInfo.new(0.5), {BackgroundTransparency = 1})
        local textFadeOut = TweenService:Create(textLabel, TweenInfo.new(0.5), {TextTransparency = 1})
        fadeOut:Play()
        textFadeOut:Play()
        fadeOut.Completed:Wait()
        notifFrame:Destroy()
    end)
end

return NotificationLib
